services:
  redpanda_broker:
    image: redpandadata/redpanda:v23.3.10
    container_name: broker
    networks:
      kafka_messaging_example:
        ipv4_address: 192.168.100.110
    volumes:
      - broker:/var/lib/redpanda/data:rw
    cap_add:
      - SYS_NICE
      - SYS_ADMIN
    labels:
      - "traefik.enable=false"
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://broker:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://broker:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr broker:33145
      - --advertise-rpc-addr broker:33145
      - --mode dev-container
      - --smp 1
      - --default-log-level=warn
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  example_app:
    image: docker.io/library/kafka-messaging-example:latest
    container_name: example_app
    networks:
      kafka_messaging_example:
        ipv4_address: 192.168.100.120
    volumes:
      - /home/steve/Downloads/truststore.p12:/certs/truststore.p12:ro
      - /home/steve/Downloads/keystore.p12:/certs/keystore.p12:ro
    environment:
      - THC_PATH=/example/actuator/health
      - THC_PORT=8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.example-app-router.rule=Host(`localhost`) || PathPrefix(`/example`)"
      - "traefik.http.routers.example-app-router.entrypoints=websecure"
      - "traefik.http.routers.example-app-router.tls=true"
      - "traefik.http.routers.example-app-router.tls.options=default"
      - "traefik.http.routers.example-app-router.service=example-app"
      - "traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist=*"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.cors.headers.accesscontrolexposeheaders=*"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowmethods=*"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowcredentials=true"
      - "traefik.http.middlewares.cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.cors.headers.addvaryheader=true"
      - "traefik.http.middlewares.pass-pem.passtlsclientcert.pem=true"
      - "traefik.http.routers.example-app-router.middlewares=cors,pass-pem"
      - "traefik.http.services.example-app.loadbalancer.server.port=8080"
    healthcheck:
      test: [ "CMD", "/cnb/process/health-check" ]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 30s
    depends_on:
      redpanda_broker:
        condition: service_healthy

  traefik:
    image: traefik:v2.11
    container_name: proxy_traefik
    networks:
      kafka_messaging_example:
        ipv4_address: 192.168.100.100
    ports:
      - "8443:8443"
      - "8888:8888"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /home/steve/IdeaProjects/kafka-messaging-example/project-resources/traefik/traefik-dynamic-config.yml:/etc/traefik/dynamic/traefik-dynamic-config.yml:ro
      - /home/steve/Downloads/server.crt:/certs/cert.pem:ro
      - /home/steve/Downloads/server.key:/certs/key.pem:ro
      - /home/steve/Downloads/ca.crt:/certs/ca.pem:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`localhost`) || (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.dashboard.entrypoints=dashboard"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.options=default"
    command:
      - "--accesslog=true"
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--entrypoints.websecure.address=:8443"
      - "--entrypoints.dashboard.address=:8888"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.docker.network=kafka_messaging_example"
      - "--providers.file.directory=/etc/traefik/dynamic"
    depends_on:
      example_app:
        condition: service_healthy

  portainer:
    image: portainer/portainer-ce
    restart: always
    command: -H unix:///var/run/docker.sock
    networks:
      kafka_messaging_example:
        ipv4_address: 192.168.100.130
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

networks:
  kafka_messaging_example:
    name: kafka_messaging_example
    ipam:
      config:
        - subnet: 192.168.100.0/24

volumes:
  broker: null
  portainer_data: null