services:
  redpanda_broker:
    image: redpandadata/redpanda:v23.3.10
    container_name: broker
    networks:
      - kafka_messaging_example
    volumes:
      - broker:/var/lib/redpanda/data:rw
    cap_add:
      - SYS_NICE
      - SYS_ADMIN
    labels:
      - "traefik.enable=false"
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://broker:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://broker:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr broker:33145
      - --advertise-rpc-addr broker:33145
      - --mode dev-container
      - --smp 1
      - --default-log-level=warn
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  example_app_1:
    image: docker.io/library/kafka-messaging-example:latest
    container_name: example_app_1
    networks:
      - kafka_messaging_example
    volumes:
      - /home/steve/Downloads/truststore.p12:/certs/truststore.p12:ro
      - /home/steve/Downloads/keystore.p12:/certs/keystore.p12:ro
    environment:
      - THC_PATH=/actuator/health
      - THC_PORT=8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.example-app-router1.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.example-app-router1.entrypoints=websecure1"
      - "traefik.http.routers.example-app-router1.tls=true"
      - "traefik.http.routers.example-app-router1.tls.options=default"
      - "traefik.http.routers.example-app-router1.service=example-app1"
      - "traefik.http.routers.example-app-router1.middlewares=cors,pass-pem"
      - "traefik.http.middlewares.cors.headers.accessControlAllowOriginList=*"
      - "traefik.http.middlewares.pass-pem.passTlsClientCert.pem=true"
      - "traefik.http.services.example-app1.loadbalancer.server.port=8080"
    healthcheck:
      test: [ "CMD", "/cnb/process/health-check" ]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 30s
    depends_on:
      redpanda_broker:
        condition: service_healthy

  example_app_2:
    image: docker.io/library/kafka-messaging-example:latest
    container_name: example_app_2
    networks:
      - kafka_messaging_example
    volumes:
      - /home/steve/Downloads/truststore.p12:/certs/truststore.p12:ro
      - /home/steve/Downloads/keystore.p12:/certs/keystore.p12:ro
    environment:
      - THC_PATH=/actuator/health
      - THC_PORT=8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.example-app-router2.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.example-app-router2.entrypoints=websecure2"
      - "traefik.http.routers.example-app-router2.tls=true"
      - "traefik.http.routers.example-app-router2.tls.options=default"
      - "traefik.http.routers.example-app-router2.service=example-app2"
      - "traefik.http.routers.example-app-router2.middlewares=cors,pass-pem"
      - "traefik.http.middlewares.cors.headers.accessControlAllowOriginList=*"
      - "traefik.http.middlewares.pass-pem.passTlsClientCert.pem=true"
      - "traefik.http.services.example-app2.loadbalancer.server.port=8080"
    healthcheck:
      test: [ "CMD", "/cnb/process/health-check" ]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 30s
    depends_on:
      redpanda_broker:
        condition: service_healthy

  traefik:
    image: traefik:v2.11
    container_name: proxy_traefik
    networks:
      - kafka_messaging_example
    ports:
      - "8443:8443"
      - "8444:8444"
      - "8888:8888"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /home/steve/IdeaProjects/kafka-messaging-example/project-resources/traefik/traefik-dynamic-config.yml:/etc/traefik/dynamic/traefik-dynamic-config.yml:ro
      - /home/steve/Downloads/server.crt:/certs/cert.pem:ro
      - /home/steve/Downloads/server.key:/certs/key.pem:ro
      - /home/steve/Downloads/ca.crt:/certs/ca.pem:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=HostRegexp(`{host:.+}`) && PathPrefix(`/api`, `/dashboard`)"
      - "traefik.http.routers.dashboard.entrypoints=dashboard"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.options=default"
    command:
      - "--accesslog=true"
      - "--log.level=DEBUG"
      - "--api.dashboard=true"
      - "--entrypoints.websecure1.address=:8443"
      - "--entrypoints.websecure2.address=:8444"
      - "--entrypoints.dashboard.address=:8888"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.docker.network=kafka_messaging_example"
      - "--providers.file.directory=/etc/traefik/dynamic"
    depends_on:
      example_app_1:
        condition: service_healthy
      example_app_2:
        condition: service_healthy

networks:
  kafka_messaging_example:
    name: kafka_messaging_example

volumes:
  broker: null
  portainer_data: null